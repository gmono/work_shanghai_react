(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["commons~main"],{

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
//item的css属性
const css = {
    cursor: "pointer",
    border: "solid 1px black",
    width: "100px",
    position: "relative"
};
// 两种 有children和无children
class DropDownBox extends React.Component {
    // 下拉框 本体
    //保存状态
    constructor(props) {
        super(props);
        //点击 显示下拉框
        this.click = (e) => {
            //点击事件
            //点击打开收起
            this.setState({
                isShowDrop: !this.state.isShowDrop
            });
        };
        // 融合 返回
        this.onSubSelected = (s) => {
            //收到下级 融合
            this.setState({
                nowSelected: s,
                isShowDrop: false
            });
            this.props.onSelected && this.props.onSelected(s);
        };
        this.state = {
            isShowDrop: false,
            nowSelected: null
        };
    }
    render() {
        var _a, _b;
        const dropbox = (React.createElement("div", { className: "dropbox" }, this.props.data.map(v => {
            //映射到一个Item
            return (
            // 下拉框列表
            React.createElement(MenuItem, { onSelected: this.onSubSelected, key: v.id, data: v }));
        })));
        // 正常的框 基于Input
        return (React.createElement("div", { style: css },
            React.createElement("div", { onClick: this.click }, (_b = (_a = this.state.nowSelected) === null || _a === void 0 ? void 0 : _a.address) !== null && _b !== void 0 ? _b : "请选择"),
            this.state.isShowDrop ? dropbox : ""));
    }
}
//下拉框中的Item
//MenuItem 即有下级菜单的Item
class MenuItem extends React.Component {
    constructor(props) {
        super(props);
        this.click = (e) => {
            //选取一个 发出selected事件
            //只有最后一级会发送这个
            if (this.props.data.children)
                return;
            this.props.onSelected({
                id: [this.props.data.id],
                address: this.props.data.text
            });
            // 关闭下拉框
            this.setState({
                isShowDrop: false
            });
        };
        // 融合 返回
        this.onSubSelected = (s) => {
            //收到下级 融合
            this.props.onSelected({
                id: [this.props.data.id, ...s.id],
                address: `${this.props.data.text}${s.address}`
            });
            this.setState({ isShowDrop: false });
        };
        this.state = {
            isShowDrop: false
        };
    }
    render() {
        const dropbox = () => {
            var _a;
            return (React.createElement("div", { className: "dropbox", style: {
                    position: "absolute",
                    left: "100%",
                    top: "0"
                } }, (_a = this.props.data.children) === null || _a === void 0 ? void 0 : _a.map(v => {
                //映射到一个Item
                return (
                // 下拉框列表
                React.createElement(MenuItem, { onSelected: this.onSubSelected, key: v.id, data: v }));
            })));
        };
        return (React.createElement("div", { style: Object.assign({}, css), onMouseEnter: () => { this.setState({ isShowDrop: true }); }, onMouseLeave: () => { this.setState({ isShowDrop: false }); }, onClick: this.click },
            this.props.data.text,
            this.props.data.children ? (React.createElement("span", { style: { float: "right" } }, ">")) : "",
            (this.props.data.children && this.state.isShowDrop) ? dropbox() : ""));
    }
}
const ReactDOM = __importStar(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));
const data = [
    {
        id: 1,
        text: "江苏省"
    },
    {
        id: 2,
        text: "中国",
        children: [
            {
                id: 300,
                text: "湖南省",
                children: [
                    {
                        id: 3,
                        text: "岳阳市"
                    },
                    {
                        id: 4,
                        text: "岳阳市2"
                    },
                    {
                        id: 5,
                        text: "岳阳市3"
                    }
                ]
            }
        ]
    }
];
ReactDOM.render(React.createElement(DropDownBox, { data: data, onSelected: (s) => { alert(JSON.stringify(s)); } }), document.querySelector("main"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQThCO0FBYTlCLFlBQVk7QUFDWixNQUFNLEdBQUcsR0FBcUI7SUFDMUIsTUFBTSxFQUFDLFNBQVM7SUFDaEIsTUFBTSxFQUFDLGlCQUFpQjtJQUN4QixLQUFLLEVBQUMsT0FBTztJQUNiLFFBQVEsRUFBQyxVQUFVO0NBQ3RCLENBQUE7QUFDRCx5QkFBeUI7QUFDekIsTUFBTSxXQUFZLFNBQVEsS0FBSyxDQUFDLFNBTTlCO0lBQ0UsU0FBUztJQUNULE1BQU07SUFDTixZQUFZLEtBQUs7UUFDYixLQUFLLENBQUMsS0FBSyxDQUFDLENBQUE7UUFNaEIsVUFBVTtRQUNWLFVBQUssR0FBQyxDQUFDLENBQThDLEVBQUUsRUFBRTtZQUNyRCxNQUFNO1lBQ04sUUFBUTtZQUNSLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsVUFBVSxFQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVO2FBQ3BDLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQTtRQUNELFFBQVE7UUFDUixrQkFBYSxHQUFDLENBQUMsQ0FBWSxFQUFDLEVBQUU7WUFDMUIsU0FBUztZQUNULElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsV0FBVyxFQUFDLENBQUM7Z0JBQ2IsVUFBVSxFQUFDLEtBQUs7YUFDbkIsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLElBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEQsQ0FBQyxDQUFBO1FBckJHLElBQUksQ0FBQyxLQUFLLEdBQUM7WUFDUCxVQUFVLEVBQUMsS0FBSztZQUNoQixXQUFXLEVBQUMsSUFBSTtTQUNuQixDQUFBO0lBQ0wsQ0FBQztJQWtCRCxNQUFNOztRQUNGLE1BQU0sT0FBTyxHQUFDLENBQ1Ys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

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,